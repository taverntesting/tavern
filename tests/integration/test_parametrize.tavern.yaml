---

test_name: Test echo parametrized

includes:
  - !include common.yaml

marks:
  - parametrize:
      key: to_send
      vals:
        - abc
        - def
        - "123"

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{to_send}"
    response:
      status_code: 200
      body:
        value: "{to_send}"

---

test_name: Test multiple parametrized values

includes:
  - !include common.yaml

marks:
  - parametrize:
      key: fruit
      vals:
        - apple
        - orange
        - pear
  - parametrize:
      key: edible
      vals:
        - rotten
        - fresh
        - unripe

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{fruit}-{edible}"
    response:
      status_code: 200
      body:
        value: "{fruit}-{edible}"

---

test_name: Test multiple parametrized values, mismatched amounts

includes:
  - !include common.yaml

marks:
  - parametrize:
      key: fruit
      vals:
        - apple
        - orange
        - pear
  - parametrize:
      key: edible
      vals:
        - rotten

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{fruit}-{edible}"
    response:
      status_code: 200
      body:
        value: "{fruit}-{edible}"

---

test_name: Test skip parametrized

includes:
  - !include common.yaml

marks:
  - skip
  - parametrize:
      key: to_send
      vals:
        - abc
        - def
        - "123"

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{to_send}"
    response:
      status_code: 503
      body:
        value: "klskdfiogj4iji34o"

---

test_name: Test skipif parametrized

includes:
  - !include common.yaml

marks:
  - skipif: "2 > 1"
  - parametrize:
      key: to_send
      vals:
        - abc
        - def
        - "123"

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{to_send}"
    response:
      status_code: 503
      body:
        value: "klskdfiogj4iji34o"

---

test_name: Test empty vals raises error

includes:
  - !include common.yaml

marks:
  - parametrize:
      key: to_send
      vals:

_xfail: verify

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{to_send}"
    response:
      status_code: 200
      body:
        value: "{to_send}"

---

test_name: Test invalid parametrize vals raises an error

includes:
  - !include common.yaml

marks:
  - parametrize:
      key: to_send
      vals:
        a: b

_xfail: verify

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{to_send}"
    response:
      status_code: 200
      body:
        value: "{to_send}"

---

test_name: Test parametrize without include

marks:
  - parametrize:
      key: to_send
      vals:
        - abc

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "http://localhost:5003/echo"
      method: POST
      json:
        value: "{to_send}"
    response:
      status_code: 200
      body:
        value: "{to_send}"

---

test_name: Test combined parametrizing

includes:
  - !include common.yaml

marks:
  - parametrize:
      key:
        - edible
        - fruit
      vals:
        - [rotten, apple]
        - [fresh, orange]
        - [unripe, pear]

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{fruit}-{edible}"
    response:
      status_code: 200
      body:
        value: "{fruit}-{edible}"

---

test_name: Test combined parametrizing with normal parametrizing

includes:
  - !include common.yaml

marks:
  - parametrize:
      key:
        - edible
        - fruit
      vals:
        - [rotten, apple]
        - [fresh, orange]
        - [unripe, pear]
  - parametrize:
      key: to_send
      vals:
        - abc
        - def

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{fruit}-{edible}_{to_send}"
    response:
      status_code: 200
      body:
        value: "{fruit}-{edible}_{to_send}"

---

test_name: Test double combined parametrizing

includes:
  - !include common.yaml

marks:
  - parametrize:
      key:
        - edible
        - fruit
      vals:
        - [rotten, apple]
        - [fresh, orange]
        - [unripe, pear]
  - parametrize:
      key:
        - first_half
        - second_half
      vals:
        - [spear, mint]
        - [jack, fruit]

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{fruit}-{edible}_{first_half}-{second_half}"
    response:
      status_code: 200
      body:
        value: "{fruit}-{edible}_{first_half}-{second_half}"

---

# NOTE: This might pass in future, if we allow parametrizing/storing JSON blocks rather than just single variables.
test_name: Test failing when vals is a list and key isn't

_xfail: verify

includes:
  - !include common.yaml

marks:
  - parametrize:
      key: edible
      vals:
        - [spear, mint]
        - [jack, fruit]

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{fruit}-{edible}"
    response:
      status_code: 200
      body:
        value: "{fruit}-{edible}-nope"

---

test_name: Test failing when key is a list and vals isn't

_xfail: verify

includes:
  - !include common.yaml

marks:
  - parametrize:
      key:
        - edible
        - fruit
      vals:
        - fresh
        - orange

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{fruit}-{edible}"
    response:
      status_code: 200
      body:
        value: "{fruit}-{edible}-nope"

---

test_name: Test failing when keys and values list lengths do not match

_xfail: verify

includes:
  - !include common.yaml

marks:
  - parametrize:
      key:
        - edible
        - fruit
      vals:
        - [fresh]

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{fruit}-{edible}"
    response:
      status_code: 200
      body:
        value: "{fruit}-{edible}-nope"

---

test_name: Test parametrize from thing in common.yaml
includes:
  - !include common.yaml

marks:
  - parametrize:
      key: generic_str
      vals:
        # normal string
        - "{v_str}"
        # from env var
        - "{second_part}"
  - parametrize:
      key: edible
      vals:
        - rotten
        - fresh
        - unripe

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{generic_str}-{edible}"
    response:
      status_code: 200
      body:
        value: "{generic_str}-{edible}"

---

test_name: Test parametrize from thing in global config

marks:
  - parametrize:
      key: generic_str
      vals:
        # normal string
        - "{global_test_string_1}"
        # from env var
        - "{global_test_string_2}"
  - parametrize:
      key: edible
      vals:
        - rotten
        - fresh
        - unripe

stages:
  - name: Echo back a unicode value and make sure it matches
    request:
      url: "{global_host}/echo"
      method: POST
      json:
        value: "{generic_str}-{edible}"
    response:
      status_code: 200
      body:
        value: "{generic_str}-{edible}"

---

test_name: Test that double formatting something in

marks:
  - parametrize:
      key:
        - line
        - text
      vals:
        # NOTE: "\" requires doubling, !raw will take care of "{" and "}"
        - [1, "XYZ[\\]^_`abcdefghijk"]
        - [2, !raw "lmnopqrstuvwxyz{|}~*"]

stages:
  - name: Echo back parametrized text
    request:
      url: "{global_host}/echo"
      method: POST
      json:
        value: "{line}-{text}"
    response:
      status_code: 200
      body:
        value: "{line}-{text}"
