load("@aspect_rules_py//py:defs.bzl", "py_library")
load("@tavern_pip//:requirements.bzl", "requirement")
load("//bazel:tavern_test.bzl", "pytest_test")

py_library(
    name = "conftest",
    testonly = True,
    srcs = ["conftest.py"],
    data = [":logging.yaml"],
    imports = [".."],
    visibility = ["//visibility:public"],
    deps = [
        "//tavern",
        "//tavern/_plugins/mqtt",
        "//tavern/_plugins/rest",
        "@tavern_pip//pytest",
        "@tavern_pip//pyyaml",
        "@tavern_pip//stevedore",
    ],
)

pytest_test(
    name = "test_doctest",
    args = [
        "-c",
        "pyproject.toml",
        "--color",
        "yes",
        "--doctest-modules",
    ],
    data = ["//:pyproject.toml"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//tavern",
        "//tests/unit:conftest",
    ],
)

#load("@io_bazel_rules_docker//container:bundle.bzl", "container_bundle")
#
#container_bundle(
#    name = "test_image_bundle",
#    images = {
#        "bazel/example/advanced:server_image": "//example/advanced:server_image",
#        "bazel/example/components:server_image": "//example/components:server_image",
#        "bazel/example/cookies:server_image": "//example/cookies:server_image",
#        "bazel/example/hooks:server_image": "//example/hooks:server_image",
#        "bazel/example/simple:server_image": "//example/simple:server_image",
#        "bazel/example/mqtt:server_image": "//example/mqtt:server_image",
#        "bazel/example/mqtt:listener_image": "//example/mqtt:listener_image",
#        "bazel/example/mqtt:fluentd": "//example/mqtt:fluentd",
#        "bazel/example/mqtt:mosquitto": "//example/mqtt:mosquitto",
#        "bazel/tests/integration:server_image": "//tests/integration:server_image",
#    },
#)
