[build-system]
requires = ["flit-core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Framework :: Pytest",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Utilities",
    "Topic :: Software Development :: Testing",
    "License :: OSI Approved :: MIT License",
]

keywords = ["testing", "pytest"]

name = "tavern"
description = "Simple testing of RESTful APIs"
version = "1.24.0"

dependencies = [
    "PyYAML>=5.3.1,<7",
    "attrs>=20.3.0,<=21.4.0",
    "jmespath<1",
    "jsonschema~=3.2.0",
    "paho-mqtt>=1.3.1,<=1.5.1",
    "pyjwt>=2.4.0,<3",
    "pykwalify>=1.8.0,<2",
    "pytest>=6.2,<8",
    "python-box>4,<6",
    "requests>=2.22.0,<3",
    "stevedore~=3.3.0",
]

requires-python = ">=3.7"

[[project.authors]]
name = "Michael Boulton"

[project.license]
file = "LICENSE"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Home = "https://taverntesting.github.io/"
Documentation = "https://tavern.readthedocs.io/en/latest/"
Source = "https://github.com/taverntesting/tavern"

[project.optional-dependencies]
dev = [
    "Faker",
    "allure-pytest",
    "black",
    "bump2version",
    "colorlog",
    "docker-compose",
    "flake8",
    "flask",
    "fluent-logger",
    "isort",
    "itsdangerous",
    "mypy",
    "mypy-extensions",
    "types-PyYAML",
    "pip-tools",
    "pre-commit",
    "pygments",
    "pylint",
    "pytest-cov",
    "ruff",
    "pytest-xdist",
    "py",
    "tox>=3,<4",
    "tox-travis",
    "twine",
    "wheel",
]


[project.scripts]

tavern-ci = "tavern.entry:main"

[project.entry-points.pytest11]

tavern = "tavern.testutils.pytesthook"

[project.entry-points.tavern_http]
requests = "tavern._plugins.rest.tavernhook:TavernRestPlugin"
[project.entry-points.tavern_mqtt]
paho-mqtt = "tavern._plugins.mqtt.tavernhook"

