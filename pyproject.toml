[build-system]
requires = ["flit-core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Framework :: Pytest",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Utilities",
    "Topic :: Software Development :: Testing",
    "License :: OSI Approved :: MIT License",
]

keywords = ["testing", "pytest"]

name = "tavern"
description = "Simple testing of RESTful APIs"
version = "2.0.4"

dependencies = [
    "PyYAML>=5.3.1,<7",
    "jmespath>=1,<2",
    "jsonschema>=3.2.0,<5",
    "paho-mqtt>=1.3.1,<=1.6.1",
    "pyjwt>=2.4.0,<3",
    "pykwalify>=1.8.0,<2",
    "pytest>=7,<8",
    "python-box>=6,<7",
    "requests>=2.22.0,<3",
    "stevedore>=4,<5",
]

requires-python = ">=3.8"

[[project.authors]]
name = "Michael Boulton"

[project.license]
file = "LICENSE"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Home = "https://taverntesting.github.io/"
Documentation = "https://tavern.readthedocs.io/en/latest/"
Source = "https://github.com/taverntesting/tavern"

[project.optional-dependencies]
dev = [
    "Faker",
    "allure-pytest",
    "black==23.1.0",
    "bump2version",
    "colorlog",
    "docker-compose",
    "flask",
    "fluent-logger",
    "itsdangerous",
    "mypy",
    "mypy-extensions",
    "coverage[toml]",
    "types-PyYAML",
    "flit >=3.2,<4",
    "pip-tools",
    "pre-commit",
    "pygments",
    "pytest-cov",
    "ruff>=0.0.246",
    "pytest-xdist",
    "py",
    "tox>=3,<4",
    "tox-travis",
    "twine",
    "wheel",
    # This has to be installed separately, otherwise you can't upload to pypi
    # "tbump@https://github.com/michaelboulton/tbump/archive/714ba8957a3c84b625608ceca39811ebe56229dc.zip",
]


[project.scripts]

tavern-ci = "tavern.entry:main"

[project.entry-points.pytest11]

tavern = "tavern._core.pytest"

[project.entry-points.tavern_http]
requests = "tavern._plugins.rest.tavernhook:TavernRestPlugin"
[project.entry-points.tavern_mqtt]
paho-mqtt = "tavern._plugins.mqtt.tavernhook"

[tool.black]
target-version = ['py37']

[tool.mypy]
python_version = 3.8
ignore_missing_imports = true

[tool.coverage.run]
branch = false
omit = [
    "tests/*",
    ".eggs/*",
    "env/*",
    "build/*",
    "dist/*",
]
source = ["tavern"]

[tool.coverage.paths]
tavern = [
    "tavern/",
    ".tox/py39-generic/lib/python3.9/site-packages/tavern/",
    ".tox/py39-mqtt/lib/python3.9/site-packages/tavern",
]

[tool.pytest.ini_options]
testpaths = ["tavern", "tests/unit"]
addopts = [
    "--doctest-modules",
    "-r", "xs",
    "-vv",
    "--strict-markers",
    "-p", "no:logging",
    "--tb=short",
]
norecursedirs = [
    ".git",
    ".tox",
    "example",
]

[tool.ruff]
ignore = [
    "E501", # line length
    "RUF005", # union types only valid from 3.10+
    "B905", # zip(..., strict=True) only valid from 3.10+
    "PLR0912", "PLR0915", "PLR0911", "PLR0913", # too many branches/variables/return values - sometimes this is just unavoidable
    "PLR2004", # 'magic numbers'
]
select = ["E", "F", "B", "W", "I", "S", "C4", "ICN", "T20", "PLE", "RUF", "SIM105", "PL"]
# Look at: UP
target-version = "py38"

[tool.ruff.per-file-ignores]
"tests/*" = ["S"]

[tool.ruff.isort]
known-first-party = ["tavern"]

[tool.tbump.version]
current = "2.0.4"

regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  ((?P<release>[a-zA-Z]+)(?P<build>\d+))?
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "{new_version}"

[[tool.tbump.file]]
src = "tavern/__init__.py"

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "docs/source/conf.py"


[[tool.tbump.before_commit]]
name = "Update changelog"
cmd = "./scripts/update-changelog.bash"

# TODO: enable
# [[tool.tbump.after_push]]
# name = "publish"
# cmd = "./scripts/release.sh"
