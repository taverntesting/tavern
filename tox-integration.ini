[tox]
envlist = py3-{generic,cookies,mqtt,advanced,components,noextra,hooks}
skip_missing_interpreters = true
isolated_build = True

[testenv]
allowlist_externals =
    docker
basepython = python3.10
passenv = DOCKER_TLS_VERIFY,DOCKER_HOST,DOCKER_CERT_PATH,DOCKER_BUILDKIT
setenv =
    TEST_HOST = http://localhost:5003
    SECOND_URL_PART = again
    PYTHONPATH = .
changedir =
    mqtt: example/mqtt
    cookies: example/cookies
    advanced: example/advanced
    components: example/components
    hooks: example/hooks
    generic: tests/integration
    noextra: tests/integration
deps =
    flask
    allure-pytest
    pyjwt
    pytest-xdist
    pytest-cov
    colorlog
    mqtt: fluent-logger
commands =
;    docker compose stop
;    docker compose build
    docker compose up --build -d
    python -m pytest --collect-only
    python -m pytest --tavern-global-cfg={toxinidir}/tests/integration/global_cfg.yaml --cov tavern {posargs}

    generic: py.test --tavern-global-cfg={toxinidir}/tests/integration/global_cfg.yaml -n 3
    generic: tavern-ci --stdout . --tavern-global-cfg={toxinidir}/tests/integration/global_cfg.yaml
    generic: python -c "from tavern.core import run; exit(run('.', '{toxinidir}/tests/integration/global_cfg.yaml', pytest_args=[ ]))"
    generic: python -c "from tavern.core import run; exit(run('.', pytest_args=['--tavern-global-cfg={toxinidir}/tests/integration/global_cfg.yaml']))"

    cookies: tavern-ci --stdout test_server.tavern.yaml
    cookies: python -c "from tavern.core import run; exit(run('test_server.tavern.yaml', pytest_args=[ ]))"

    advanced: tavern-ci --stdout test_server.tavern.yaml
    advanced: python -c "from tavern.core import run; exit(run('test_server.tavern.yaml', pytest_args=[ ]))"

    components: tavern-ci --stdout test_ping.tavern.yaml
    components: tavern-ci --stdout test_hello.tavern.yaml
    components: python -c "from tavern.core import run; exit(run('test_ping.tavern.yaml', pytest_args=[ ]))"
    components: python -c "from tavern.core import run; exit(run('test_hello.tavern.yaml', pytest_args=[ ]))"

    mqtt: tavern-ci --stdout test_mqtt.tavern.yaml --cov tavern
    mqtt: python -c "from tavern.core import run; exit(run('test_mqtt.tavern.yaml', pytest_args=['--cov-append']))"
    mqtt: tavern-ci --stdout test_mqtt_failures.tavern.yaml
    mqtt: python -c "from tavern.core import run; exit(run('test_mqtt_failures.tavern.yaml', pytest_args=[ ]))"

    docker compose stop
