load("@rules_python//python:defs.bzl", "py_library")
load("@tavern_pip//:requirements.bzl", "requirement")
load("@aspect_bazel_lib//lib:tar.bzl", "tar")

py_library(
    name = "conftest",
    srcs = [
        ":conftest.py",
    ],
    deps = [
        requirement("fluent_logger"),
    ],
)

py_library(
    name = "testing_utils",
    srcs = [
        ":testing_utils.py",
    ],
)

load("//bazel:tavern_test.bzl", "tavern_test")

tavern_test(
    "test_mqtt.tavern.yaml",
    extra_data = [
        ":common.yaml",
    ],
    extra_deps = [
        ":conftest",
        ":testing_utils",
    ],
    images = {
        "example-mqtt-server": ":server_image",
        "example-mqtt-listener": ":listener_image",
        "broker": ":mosquitto",
        "fluent": ":fluentd",
    },
)

tavern_test(
    "test_mqtt_failures.tavern.yaml",
    extra_data = [
        ":common.yaml",
    ],
    extra_deps = [
        ":conftest",
        ":testing_utils",
    ],
    images = {
        "example-mqtt-server": ":server_image",
        "example-mqtt-listener": ":listener_image",
        "broker": ":mosquitto",
        "fluent": ":fluentd",
    },
    # Make sure it's not run at the same time as the above
    tags = ["exclusive"],
)

load("//bazel:images.bzl", "py_oci_image")
load("@rules_oci//oci:defs.bzl", "oci_image")

py_oci_image(
    name = "server_image",
    srcs = [":server.py"],
    base = "//bazel:py3_base_image",
    main = ":server.py",
    visibility = ["//:__subpackages__"],
    deps = [
        requirement("flask"),
        requirement("fluent_logger"),
        requirement("paho_mqtt"),
        requirement("pyyaml"),
    ],
)

py_oci_image(
    name = "listener_image",
    srcs = [":listener.py"],
    base = "//bazel:py3_base_image",
    main = ":listener.py",
    visibility = ["//:__subpackages__"],
    deps = [
        requirement("fluent_logger"),
        requirement("paho_mqtt"),
        requirement("pyyaml"),
    ],
)

tar(
    name = "mosquitto_conf_tar",
    srcs = [
        ":mosquitto.conf",
    ],
    mtree = [
        "mosquitto/config uid=0 gid=0 mode=0755 type=dir",
        "mosquitto/config/mosquitto.conf uid=0 gid=0 mode=0755 type=file content={}/mosquitto.conf".format(package_name()),
    ],
    visibility = ["//visibility:public"],
)

oci_image(
    name = "mosquitto",
    base = "@mosquitto",
    tars = [":mosquitto_conf_tar"],
    visibility = ["//:__subpackages__"],
)

tar(
    name = "fluentd_conf_tar",
    srcs = [
        ":fluent.conf",
    ],
    mtree = [
        "fluentd/etc uid=0 gid=0 mode=0755 type=dir",
        "fluentd/etc/fluent.conf uid=0 gid=0 mode=0755 type=file content={}/fluent.conf".format(package_name()),
    ],
    visibility = ["//visibility:public"],
)

oci_image(
    name = "fluentd",
    base = "@fluentd",
    tars = [":fluentd_conf_tar"],
    visibility = ["//:__subpackages__"],
)
