---

test_name: Make sure jwt returned has the expected aud value

includes:
  - !include common.yaml

stages:
  - &login_request
    name: login
    request:
      url: "{service.proto:s}://{service.host:s}:{service.port:d}/login"
      json:
        user: test-user
        password: correct-password
      method: POST
      headers:
        content-type: application/json
    response:
      status_code: 200
      verify_response_with: &verify_token
        function: tavern.helpers:validate_jwt
        extra_kwargs:
          jwt_key: "token"
          key: CGQgaG7GYvTcpaQZqosLy4
          algorithms: [ HS256 ]
          options:
            verify_signature: true
            verify_aud: true
            verify_exp: true
          audience: testserver
      headers:
        content-type: application/json
      save:
        $ext:
          <<: *verify_token
        json:
          test_login_token: token

---

test_name: Make sure server doubles number properly

includes:
  - !include common.yaml

stages:
  - &reset_request
    name: reset database for test
    request:
      url: "{service.proto:s}://{service.host:s}:{service.port:d}/reset"
      method: POST
    response:
      status_code: 204

  - *login_request

  - name: post a number
    request:
      url: "{service.proto:s}://{service.host:s}:{service.port:d}/numbers"
      json:
        name: smallnumber
        number: 123
      method: POST
      headers:
        content-type: application/json
        Authorization: "bearer {test_login_token:s}"
    response:
      status_code: 201
      headers:
        content-type: application/json

  - name: Make sure its in the db
    request:
      url: "{service.proto:s}://{service.host:s}:{service.port:d}/numbers"
      params:
        name: smallnumber
      method: GET
      headers:
        content-type: application/json
        Authorization: "bearer {test_login_token:s}"
    response:
      status_code: 200
      json:
        number: 123
      headers:
        content-type: application/json

  - name: double it
    request:
      url: "{service.proto:s}://{service.host:s}:{service.port:d}/double"
      json:
        name: smallnumber
      method: POST
      headers:
        content-type: application/json
        Authorization: "bearer {test_login_token:s}"
    response:
      status_code: 200
      json:
        number: 246
      verify_response_with:
        function: testing_utils:assert_quick_response
      headers:
        content-type: application/json

  - name: Make sure db has been updated properly
    request:
      url: "{service.proto:s}://{service.host:s}:{service.port:d}/numbers"
      params:
        name: smallnumber
      method: GET
      headers:
        content-type: application/json
        Authorization: "bearer {test_login_token:s}"
    response:
      status_code: 200
      json:
        number: 246
      headers:
        content-type: application/json

---

test_name: Check trying to get a number that we didnt post before returns a 404

includes:
  - !include common.yaml

stages:
  - *reset_request
  - *login_request

  - name: double it
    request:
      url: "{service.proto:s}://{service.host:s}:{service.port:d}/numbers"
      params:
        name: whatnumber
      method: GET
      headers:
        content-type: application/json
        Authorization: "bearer {test_login_token:s}"
    response:
      status_code: 404
      json:
        error: Unknown number
      headers:
        content-type: application/json

---

test_name: Create a jwt ourselves to authorize

includes:
  - !include common.yaml

stages:
  - name: post a number and crate our own authorization
    request:
      url: "{service.proto:s}://{service.host:s}:{service.port:d}/numbers"
      json:
        name: smallnumber
        number: 123
      method: POST
      headers:
        content-type: application/json
        $ext:
          function: testing_utils:create_bearer_token
    response:
      status_code: 201
      headers:
        content-type: application/json
