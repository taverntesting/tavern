---

test_name: Test grpc message echo

includes:
  - !include common.yaml

grpc: &grpc_spec
  connect:
    host: "{grpc_host}"
    port: !int "{grpc_port}"
    timeout: 3
  proto:
    source: .


stages:
  - name: Echo text
    grpc_request:
      service: helloworld.Greeter/SayHello
      body:
        name: "John"
    grpc_response:
      status: "OK"
      body:
        message: "Hello, John!"
---

test_name: Test trying to compile a folder with no protos in it

includes:
  - !include common.yaml

marks:
  - usefixtures:
      - make_temp_dir

_xfail:
  run: "No protos defined in"

grpc:
  connect:
    host: "{grpc_host}"
    port: !int "{grpc_port}"
    timeout: 3
  proto:
    source: "{make_temp_dir}"

stages:
  - name: Echo text
    grpc_request:
      service: helloworld.Greeter/SayHello
      body:
        name: "John"
    grpc_response:
      status: "OK"
      body:
        message: "Hello, John!"

---

test_name: Test grpc message echo importing a module instead of compiling from source

includes:
  - !include common.yaml

grpc:
  connect:
    host: "{grpc_host}"
    port: !int "{grpc_port}"
    timeout: 3
  proto:
    module: server/helloworld_pb2_grpc

stages:
  - name: Echo text
    grpc_request:
      service: helloworld.Greeter/SayHello
      body:
        name: "John"
    grpc_response:
      status: "OK"
      body:
        message: "Hello, John!"

---

test_name: Test grpc message echo importing a module but its a path to a file

includes:
  - !include common.yaml

_xfail: run

grpc:
  connect:
    host: "{grpc_host}"
    port: !int "{grpc_port}"
    timeout: 3
  proto:
    module: server.helloworld_pb2_grpc.py

stages:
  - name: Echo text
    grpc_request:
      service: helloworld.Greeter/SayHello
      body:
        name: "John"
    grpc_response:
      status: "OK"
      body:
        message: "Hello, John!"

---

test_name: Test grpc connection without the 'connect' block

includes:
  - !include common.yaml

grpc:
  proto:
    module: server.helloworld_pb2_grpc

stages:
  - name: Echo text
    grpc_request:
      host: "{grpc_host}:{grpc_port}"
      service: helloworld.Greeter/SayHello
      body:
        name: "John"
    grpc_response:
      status: "OK"
      body:
        message: "Hello, John!"

---

test_name: Test grpc connection without the 'connect' block, with a bad message

includes:
  - !include common.yaml

grpc:
  proto:
    module: server.helloworld_pb2_grpc

_xfail: run

stages:
  - name: Echo text
    grpc_request:
      host: "{grpc_host}:{grpc_port}"
      service: helloworld.Greeter/SayHello
      body:
        aarg: wooo
        name: "John"
    grpc_response:
      status: "OK"
      body:
        message: "Hello, John!"

---

test_name: Test grpc connection without the 'connect' block, using server reflection

includes:
  - !include common.yaml

stages:
  - name: Echo text
    grpc_request:
      host: "{grpc_host}:{grpc_reflecting_port}"
      service: helloworld.Greeter/SayHello
      body:
        name: "John"
    grpc_response:
      status: "OK"
      body:
        message: "Hello, John!"

---

test_name: Test grpc connection without the 'connect' block, using server reflection, with a bad message

includes:
  - !include common.yaml

_xfail: run

stages:
  - name: Echo text
    grpc_request:
      host: "{grpc_host}:{grpc_reflecting_port}"
      service: helloworld.Greeter/SayHello
      body:
        aarg: wooo
        name: "John"
    grpc_response:
      status: "OK"
      body:
        message: "Hello, John!"

---

test_name: Test grpc compiling source, with a bad message

includes:
  - !include common.yaml

grpc: *grpc_spec

_xfail: run

stages:
  - name: Echo text
    grpc_request:
      host: "{grpc_host}:{grpc_port}"
      service: helloworld.Greeter/SayHello
      body:
        name: "John"
        A: klk
    grpc_response:
      status: "OK"
      body:
        message: "Hello, John!"

---

test_name: Test grpc message echo importing a module that doesn't exist

includes:
  - !include common.yaml

grpc:
  connect:
    host: "{grpc_host}"
    port: !int "{grpc_port}"
    timeout: 3
  proto:
    module: cool_grpc_server

_xfail: run

stages:
  - name: Echo text
    grpc_request:
      service: helloworld.Greeter/SayHello
      body:
        name: "John"
    grpc_response:
      status: "OK"
      body:
        message: "Hello, John!"

---

test_name: Test cannot use invalid string status

includes:
  - !include common.yaml

grpc: *grpc_spec

_xfail: verify

stages:
  - name: Echo text
    grpc_request:
      service: helloworld.Greeter/SayHello
      body:
        name: "Jim"
    grpc_response:
      status: "GREETINGS"
      body:
        message: "Hello, Jim!"
