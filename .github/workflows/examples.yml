name: Test Getting Started Examples

on:
  push:
    paths:
      - 'example/getting_started/**'
      - 'docs/source/**'
  pull_request:
    paths:
      - 'example/getting_started/**'
      - 'docs/source/**'

jobs:
  test-getting-started:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r example/getting_started/requirements.txt

    - name: Start test server
      run: |
        cd example/getting_started
        python server.py &
        sleep 5

    - name: Run basic API tests
      run: |
        cd example/getting_started
        python -m pytest test_basic_api.tavern.yaml -v

    - name: Run marks and fixtures tests
      run: |
        cd example/getting_started
        python -m pytest test_marks_and_fixtures.tavern.yaml -v

    - name: Run external functions tests
      run: |
        cd example/getting_started
        python -m pytest test_external_functions.tavern.yaml -v

    - name: Run all tests with coverage
      run: |
        cd example/getting_started
        python -m pytest *.tavern.yaml -v --html=report.html --self-contained-html

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: example/getting_started/report.html

  docker-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and test with Docker
      run: |
        cd example/getting_started
        docker build -t tavern-getting-started .

    - name: Run Docker Compose tests
      run: |
        cd example/getting_started
        docker-compose up --build --abort-on-container-exit

  documentation-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install documentation dependencies
      run: |
        pip install sphinx sphinx-rtd-theme

    - name: Build documentation
      run: |
        cd docs
        make html

    - name: Check for broken links
      run: |
        cd docs
        python -c "
        import os
        import re
        broken_links = []
        for root, dirs, files in os.walk('build/html'):
            for file in files:
                if file.endswith('.html'):
                    with open(os.path.join(root, file), 'r') as f:
                        content = f.read()
                        # Check for common broken link patterns
                        if 'example/getting_started/' in content:
                            print(f'Found reference to getting_started in {file}')
        "
