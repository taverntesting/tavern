---
name: Test schema
desc: Matches test blocks

# http://www.kuwata-lab.com/kwalify/ruby/users-guide.01.html
# https://pykwalify.readthedocs.io/en/unstable/validation-rules.html


schema;any_map_with_ext_function:
  # Anchor matches any key: value, and if there's an $ext function
  # in it it will check that it can be loaded at schema validation
  # time instead of run time. This means there can be both
  # checking for key: value matches as well as passing it to a
  # function for more advanced manipulation
  func: validate_extensions
  type: map
  required: false
  mapping:
    re;(.*):
      type: any

schema;any_map_or_list_with_ext_function:
  # Similar, but we want to match lists or dicts
  func: validate_json_with_extensions
  type: any
  required: false


type: map
mapping:
  test_name:
    required: true
    type: str

  marks:
    type: seq
    matching: "any"
    sequence:
      - type: str
        # bug? in pykwalify - this doesn't work
        # unique: true
      - type: map
        mapping:
          skipif:
            type: str

          parametrize:
            type: map
            mapping:
              key:
                type: str
                required: true
              vals:
                type: seq
                required: true
                sequence:
                  - type: str
                  - type: int
                  - type: float

  _xfail:
    type: str
    enum:
      - verify
      - run

  strict:
    func: check_strict_key
    type: any

  includes:
    required: false
    type: seq
    sequence:
      - type: map
        required: false
        mapping:
          name:
            required: true
            type: str

          description:
            required: true
            type: str

          variables:
            type: map
            required: false
            mapping:
              re;(.*):
                type: any

  stages:
    type: seq
    required: true
    sequence:
      - type: map
        required: true
        mapping:
          name:
            type: str
            required: true
            unique: true

          skip:
            type: bool
            required: false

          only:
            type: bool
            required: false

          delay_before:
            type: float
            required: false
            unique: true
          delay_after:
            type: float
            required: false
            unique: true

          mqtt_publish:
            type: map
            required: false
            mapping:
              topic:
                type: str
                required: true
              payload:
                # Only a string
                type: str
                required: false
              json:
                include: any_map_or_list_with_ext_function
              qos:
                type: int
                required: false
          mqtt_response:
            type: map
            required: false
            mapping:
              topic:
                type: str
                required: true
              payload:
                type: any
                required: false
              json:
                include: any_map_or_list_with_ext_function
              timeout:
                type: float
                required: false
              qos:
                type: int
                required: false
                enum:
                  - 0
                  - 1
                  - 2

          request:
            type: map
            required: false
            mapping:
              url:
                type: str
                required: true

              re;(params|data|headers):
                include: any_map_with_ext_function

              auth:
                func: validate_extensions
                type: seq
                required: false
                sequence:
                  - type: str
                    required: true
                  - type: str
                    required: true

              json:
                include: any_map_or_list_with_ext_function

              files:
                required: false
                type: map
                mapping:
                  re;(.*):
                    type: str

              method:
                type: str
                enum:
                  - GET
                  - PUT
                  - POST
                  - DELETE
                  - PATCH
                  - OPTIONS
                  - HEAD

              verify:
                type: bool
                required: false

              meta:
                type: seq
                required: false
                sequence:
                  - type: str
                    unique: true

          response:
            type: map
            required: false
            mapping:
              strict:
                func: check_strict_key
                type: any

              status_code:
                type: any
                func: validate_status_code_is_int_or_list_of_ints

              cookies:
                type: seq
                required: false
                sequence:
                  - type: str
                    unique: true

              re;(headers|redirect_query_params):
                include: any_map_with_ext_function

              body:
                include: any_map_or_list_with_ext_function

              save:
                include: any_map_with_ext_function
                mapping:
                  re;(\$ext|body|headers|redirect_query_params):
                    type: any
