---
name: Test schema
desc: Matches test blocks

# http://www.kuwata-lab.com/kwalify/ruby/users-guide.01.html
# https://pykwalify.readthedocs.io/en/unstable/validation-rules.html

type: map
mapping:
  test_name:
    required: true
    type: str

  mqtt:
    required: false
    type: map
    mapping:

      client:
        required: false
        type: map
        mapping:
          client_id:
            type: str
            required: false
          clean_session:
            type: bool
            required: false
          transport:
            type: str
            required: false
            enum:
              - tcp
              - websockets

      connect:
        required: true
        type: map
        mapping:
          host:
            required: true
            type: str
          port:
            required: false
            type: int
          keepalive:
            required: false
            type: float
          timeout:
            required: false
            type: float

      tls:
        required: false
        type: map
        mapping:
          enable:
            required: false
            type: bool

          ca_certs:
            required: false
            type: str

          certfile:
            required: false
            type: str

          keyfile:
            required: false
            type: str

          cert_reqs:
            required: false
            type: str
            enum:
              - CERT_NONE
              - CERT_OPTIONAL
              - CERT_REQUIRED

          tls_version:
            required: false
            type: str
            # This could be an enum but there's lots of them, and which ones are
            # actually valid changes based on which version of python you're
            # using. Just let any ssl errors propagate through

          ciphers:
            required: false
            type: str

      auth:
        required: false
        type: map
        mapping:
          username:
            type: str
            required: true

          password:
            type: str
            required: false

  includes:
    required: false
    type: seq
    sequence:
      - type: map
        required: false
        mapping:
          name:
            required: true
            type: str

          description:
            required: true
            type: str

          variables:
            type: map
            required: false
            mapping:
              re;(.*):
                type: any

  stages:
    type: seq
    required: true
    sequence:
      - type: map
        required: true
        mapping:
          name:
            type: str
            required: true
            unique: true

          delay_before:
            type: int
            required: false
            unique: true

          delay_after:
            type: int
            required: false
            unique: true

          request:
            type: map
            required: false
            mapping:
              url:
                type: str
                required: true

              re;(params|data|headers): &any_map_with_ext_function
                # Anchor matches any key: value, and if there's an $ext function
                # in it it will check that it can be loaded at schema validation
                # time instead of run time. This means there can be both
                # checking for key: value matches as well as passing it to a
                # function for more advanced manipulation
                func: validate_extensions
                type: map
                required: false
                mapping:
                  re;(.*):
                    type: any

              json: &any_map_or_list_with_ext_function
                # Similar, but we want to match lists or dicts
                func: validate_json_with_extensions
                type: any
                required: false

              method:
                type: str
                enum:
                  - GET
                  - PUT
                  - POST
                  - DELETE
                  - PATCH
                  - OPTIONS
                  - HEAD

              verify:
                type: bool
                required: false

          mqtt_publish:
            type: map
            required: false
            mapping:
              topic:
                type: str
                required: true
              payload:
                # Only a string
                type: str
                required: false
              json:
                <<: *any_map_or_list_with_ext_function
              qos:
                type: int
                required: false

          response:
            type: map
            required: false
            mapping:
              status_code:
                type: int

              cookies:
                type: seq
                required: False
                sequence:
                  - type: str
                    unique: True

              re;(headers|redirect_query_params):
                <<: *any_map_with_ext_function

              body:
                <<: *any_map_or_list_with_ext_function

              save:
                <<: *any_map_with_ext_function
                mapping:
                  re;(\$ext|body|headers|redirect_query_params):
                    type: any

          mqtt_response:
            type: map
            required: false
            mapping:
              topic:
                type: str
                required: true
              payload:
                type: any
                required: false
              json:
                <<: *any_map_or_list_with_ext_function
              timeout:
                type: float
                required: false
