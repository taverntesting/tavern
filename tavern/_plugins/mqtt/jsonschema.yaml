$schema: "http://json-schema.org/draft-07/schema#"

title: Paho MQTT schema
description: Schema for paho-mqtt connection

###

type: object
additionalProperties: false
required:
  - paho-mqtt

properties:
  paho-mqtt:
    type: object
    description: Connection options for paho-mqtt
    additionalProperties: false
    required:
      - connect

    properties:
      client:
        description: Arguments to pass to the paho-mqtt client constructor

        type: object
        additionalProperties: false

        properties:
          client_id:
            type: string
            description: MQTT client ID

          clean_session:
            type: boolean
            description: Whether to start a clean session

          transport:
            type: string
            description: Whether to use raw TCP or websockets to connect
            enum:
              - tcp
              - websockets

      connect:
        description: Connection options

        type: object
        additionalProperties: false

        required:
          - host

        properties:
          host:
            type: string
            description: Host to connect to

          port:
            type: integer
            description: Port to use with connection

          keepalive:
            type: number
            description: How often to send keepalive packets

          timeout:
            type: number
            description: How long to wait for connection before giving up

      tls:
        description: Basic custom options to control secure connection

        type: object
        additionalProperties: false

        properties:
          enable:
            type: boolean
            description: Whether to enable TLS
            default: true

          ca_certs:
            type: string
            description: Path to CA cert bundle

          certfile:
            type: string
            description: Path to certificate for server

          keyfile:
            type: string
            description: Path to private key for client

          cert_reqs:
            type: string
            description: Controls connection with cert
            enum:
              - CERT_NONE
              - CERT_OPTIONAL
              - CERT_REQUIRED

          tls_version:
            type: string
            description: TLS version to use

          ciphers:
            type: string
            description: Allowed ciphers to use with connection

      ssl_context:
        description: Advanced custom options to control secure connection using SSLContext

        type: object
        additionalProperties: false

        properties:
          ca_certs:
            type: string
            description: Path to CA cert bundle

          certfile:
            type: string
            description: Path to certificate for server

          keyfile:
            type: string
            description: Path to private key for client

          password:
            type: string
            description: Password for keyfile

          cert_reqs:
            type: string
            description: Controls connection with cert
            enum:
              - CERT_NONE
              - CERT_OPTIONAL
              - CERT_REQUIRED

          tls_version:
            type: string
            description: TLS version to use

          ciphers:
            type: string
            description: Allowed ciphers to use with connection

          alpn_protocols:
            type: array
            description: |
              Which protocols the socket should advertise during the SSL/TLS handshake.
              See https://docs.python.org/3/library/ssl.html#ssl.SSLContext.set_alpn_protocols

      auth:
        description: Username and password for basic authorisation

        type: object
        additionalProperties: false

        required:
          - username

        properties:
          username:
            type: string

          password:
            type: string
